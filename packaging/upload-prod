#!/bin/sh

BUNDLE=$1
DRYRUN=$2

DO_DRYRUN=0

if test x$BUNDLE = x || test x$BUNDLE = xdry ; then
	echo "Usage: ./upload-prod <bundle> [<dry>]"
	exit 1
fi

if [ ! -e  bundles/$BUNDLE ] ; then
	echo "Bundle $BUNDLE does not exist"
	exit 1
fi

if test x$DRYRUN = xdry ; then
	extra_options=n
	echo "Doing dry run..."
	DO_DRYRUN=1
fi

# Hack: Don't push the rtl releases
extra_options="$extra_options --exclude *rtl*"

cd packages
rsync -Cavz$extra_options -e ssh . mono-web@go-mono.com:go-mono/download

cd ../external_packages
rsync -Cavz$extra_options -e ssh . mono-web@go-mono.com:go-mono/external_packages

cd ../sources
rsync -Cavz$extra_options -e ssh . mono-web@go-mono.com:go-mono/sources
cd ..

# Push the installers
cd ../linux-installer/output
rsync -Cavz$extra_options -e ssh . mono-web@go-mono.com:go-mono/archive
cd -

cd ../windows-installer/Output
rsync -avz$extra_options -e ssh . mono-web@go-mono.com:go-mono/archive
cd -

cd ../sunos/output
rsync -avz$extra_options -e ssh . mono-web@go-mono.com:go-mono/archive
cd -

cd ../macosx/new/output
rsync -avz$extra_options -e ssh . mono-web@go-mono.com:go-mono/archive
cd -

if test x$DO_DRYRUN = x1 ; then
	echo "Stopping because of dry run"
	exit
fi

ssh mono-web@go-mono.com "cp -f release/website/packaging.css		~/go-mono/"
ssh mono-web@go-mono.com "cd release/website; ./mk-sources-index.py	$BUNDLE ~/go-mono '' ~/go-mono/sources"
ssh mono-web@go-mono.com "cd release/website; ./mk-distro-index.py	$BUNDLE ~/go-mono '' ~/go-mono/download go-mono.com"
ssh mono-web@go-mono.com "cd release/website; ./mk-archive-index.py	$BUNDLE ~/go-mono ''"
ssh mono-web@go-mono.com "cd release/website; ./mk-repos.py		$BUNDLE ~/go-mono '' ~/go-mono/download go-mono.com"


