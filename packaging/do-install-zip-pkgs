#!/bin/sh


# Will be /tmp/build_deps for the packaging system
DEST=$1
shift

echo Installing to $DEST

#rm -Rf $DEST
#mkdir -p $DEST

if [ ! -e $DEST ] ; then
	mkdir -p $DEST
fi

cd $DEST

for file in $* ; do
	
	if expr match $file '.*rpm' ; then
		# Turn the rpm's /usr/lib into /lib
		rm -Rf /tmp/rpm_unpack
		mkdir -p /tmp/rpm_unpack
		cd /tmp/rpm_unpack
		rpm2cpio $file | cpio -idv
		cd usr # Depends on having the prefix to be /usr (this may not work with all rpms)
		cp -Rf * $DEST
		cd $DEST
		rm -Rf /tmp/rpm_unpack
	# TODO: These matches are broken, ex: do-install-zip-pkgs matches
	elif expr match $file '.*zip' ; then
		unzip -o $file
	else
		echo "Don't know how to handle: $file"
		continue
	fi

done


# Avoids "Application Error"
chmod 755 $DEST/bin/*

# Change prefix in the .pc files
reg_safe_dest=${DEST//\//\\\/}
for file in `find . -name "*.pc"` ; do
	echo Substituting $file
	sed -i "s/^prefix=.*/prefix=$reg_safe_dest/" $file
done


# Write out an env.sh in the $DEST dir so we can use that when we build
# This needs to by dynamic
echo "export PKG_CONFIG_PATH=\$PKG_CONFIG_PATH:$DEST/lib/pkgconfig" > env.sh
#echo "export PATH=\$PATH:$DEST/bin:$DEST/lib" >> env.sh
echo "export PATH=\$PATH:$DEST/bin" >> env.sh

# This will work for our own built mono package
# If this is going to work on our mono zip, then all the mono bin /sh files will need to be replaced...
source="/tmp/install"
reg_safe_source=${source//\//\\\/}

source2="/usr"
reg_safe_source2=${source2//\//\\\/}

dest=$DEST
reg_safe_dest=${dest//\//\\\/}

# This is only until the monodoc (possibily other packages) package gets fixed
cyg_dest="C:/cygwin/usr"
cyg_reg_safe_dest=${cyg_dest//\//\\\/}

#?
cd bin
for file in `find .` ; do
	if grep "/tmp/install" $file && grep "#!/bin/sh" $file ; then

		# Don't think this is an issue because we're using the rpm
		## First take care of the cygpath -d issues (hack until monodoc and other bugs get fixed)
		#sed -i "s/^prefix=$reg_safe_source/prefix=$cyg_reg_safe_dest/" $file

		# Replace /tmp/install with /tmp/build_deps ($DEST)
		sed -i "s/$reg_safe_source/$reg_safe_dest/" $file
	fi


	# Do same substitution for the noarch rpms: (/usr instead of /tmp/install)
	if grep "/usr" $file && grep "#!/bin/sh" $file ; then
		# First take care of the cygpath -d (Specifically for monodoc)
		sed -i "s/^prefix=$reg_safe_source2/prefix=$cyg_reg_safe_dest/" $file
		sed -i "s/^monodocdir=$reg_safe_source2/monodocdir=$cyg_reg_safe_dest/" $file

		# Replace /usr with /tmp/build_deps ($DEST)
		sed -i "s/$reg_safe_source2/$reg_safe_dest/" $file

	fi

done
#?
cd ..


