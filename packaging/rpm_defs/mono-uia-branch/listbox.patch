Index: class/Managed.Windows.Forms/System.Windows.Forms/ListBox.cs
===================================================================
--- mcs/class/Managed.Windows.Forms/System.Windows.Forms/ListBox.cs	(revision 107679)
+++ mcs/class/Managed.Windows.Forms/System.Windows.Forms/ListBox.cs	(working copy)
@@ -2355,6 +2355,18 @@
 
 			private ListBox owner;
 			internal ArrayList object_items = new ArrayList ();
+			
+			#region UIA Framework Events 
+#if NET_2_0
+	    		//UIA Framework events for ListBox Provider used the
+	    		//generated UIA StructureChanged event
+	    		//- ItemAdded. Generates StructureChanged.ChildAdded
+	    		//- ItemRemoved. Generates StructureChanged.ChildRemoved
+			internal event StructureChangeEventHandler ChildAdded;
+			internal event StructureChangeEventHandler ChildRemoved;
+			internal delegate void StructureChangeEventHandler (object sender, int index);
+#endif
+			#endregion
 
 			public ObjectCollection (ListBox owner)
 			{
@@ -2396,8 +2408,24 @@
 						throw new ArgumentOutOfRangeException ("Index of out range");
 					if (value == null)
 						throw new ArgumentNullException ("value");
+						
+#if NET_2_0
+				//UIA Framework event used to indicate that Structure
+				//has Changed: child item removed
+				if (ChildRemoved != null)
+					ChildRemoved (this, index);
+#endif
 
 					object_items[index] = value;
+					
+#if NET_2_0
+				//UIA Framework event used to indicate that Structure
+				//has Changed: child item added
+				if (ChildAdded != null)
+					ChildAdded (this, index);
+#endif					
+
+					
 					owner.CollectionChanged ();
 				}
 			}
@@ -2521,6 +2549,13 @@
 				object_items.Insert (index, item);
 				owner.CollectionChanged ();
 				owner.EndUpdate ();
+				
+#if NET_2_0
+				//UIA Framework event used to indicate that Structure
+				//has Changed: child item added
+				if (ChildAdded != null)
+					ChildAdded (this, index);
+#endif
 			}
 
 			public void Remove (object value)
@@ -2539,6 +2574,13 @@
 				owner.selected_indices.Remove (index);
 				object_items.RemoveAt (index);
 				owner.CollectionChanged ();
+				
+#if NET_2_0
+				//UIA Framework event used to indicate that Structure
+				//has Changed: child item removed
+				if (ChildRemoved != null)
+					ChildRemoved (this, index);
+#endif
 			}
 			#endregion Public Methods
 
@@ -2550,6 +2592,14 @@
 
 				int cnt = object_items.Count;
 				object_items.Add (item);
+
+#if NET_2_0
+				//UIA Framework event used to indicate that Structure
+				//has Changed: child item added
+				if (ChildAdded != null)
+					ChildAdded (this, cnt);
+#endif
+
 				return cnt;
 			}
 
