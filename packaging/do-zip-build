#!/usr/bin/env python

import sys
import shutil
import os
import glob
import re
import distutils.dir_util

import utils
import packaging

rev = sys.argv[1]
package = sys.argv[2]
distro = sys.argv[3]
version = sys.argv[4]

os.chdir('/tmp')

# Load def info
env = packaging.buildenv(distro)
pack_def = packaging.package(env, package, inside_jail=True)

for d in [ '/tmp/builder/built-packages', '/tmp/scratch', '/tmp/install' ]:
	if os.path.exists(d):
		shutil.rmtree(d)

os.mkdir('/tmp/scratch')
os.chdir('/tmp/scratch')

sources = glob.glob('../*.zip')
sources += glob.glob('../*.tar.gz')
sources += glob.glob('../*.tar.bz2')
patches = glob.glob('../*.patch')
patches.sort()

for f in sources + patches + ['../' + package, '../' + distro ]:
	shutil.move(f, '.')


# Find type of source
source_dir = utils.unpack_source(os.path.basename(sources[0]))

arch = pack_def.package_env.info['arch']

os.chdir(source_dir)

# Apply patches if this package defines it
if pack_def.get_info_var('USE_PATCHES'):
	for patch in patches:
		if(os.system("patch -p1 < " + patch)):
			print "Failed applying patch: " + os.path.basename(patch)
			sys.exit(1)

# Get code from def file
shell_code = pack_def.get_zip_build_commands()

# Move def file so it gets cleaned up, and also saved with successful build
for f in pack_def.get_aliases():
	shutil.move('/tmp/' + f, '..')

# set version var, load up environment for deps, and execute build command
os.environ['version'] = version
build_command = ". /tmp/build_deps/env.sh ; %s" % shell_code

# TODO:  For some reason the above exit isn't being called on failures
#  (Still an issue... ?)
if(os.system(build_command)):
	print "Build failed..."
	sys.exit(1)

# Package up the build
os.chdir('/tmp/install')
distutils.dir_util.mkpath('/tmp/builder/built-packages')
os.system('zip -yr /tmp/builder/built-packages/%s-%s-%s.%s.zip *' % (package, version, rev, arch) )
# Keep a copy of the "spec" file and distro conf file
shutil.copy('/tmp/scratch/' + package, '/tmp/builder/built-packages')
shutil.copy('/tmp/scratch/' + distro, '/tmp/builder/built-packages')

# Save alias files
for f in pack_def.get_aliases():
	shutil.copy('/tmp/scratch/' + f, '/tmp/builder/built-packages')

