#!/usr/bin/env bash

rev=$1
package=$2
distro=$3
version=$4

rm -rf /tmp/builder/built-packages 	|| exit 1
cd /tmp && rm -rf scratch 		|| exit 1
rm -rf install 			 	|| exit 1
mkdir scratch && cd scratch 		|| exit 1

mv ../$package .
mv ../*.tar.gz .
mv ../*.zip .
mv ../*.patch .

tarball=`ls *.tar.gz`
use_zip=0

if [ x == x$tarball ] ; then
	tarball=`ls *.zip`
	use_zip=1
fi

arch=${distro#*-*-}

if [ $use_zip -eq 0 ] ; then

	component_name_ver=${tarball//\.tar\.gz/}

	if [ -e /usr/local/bin/tar ] ; then
		# This is for the solaris 8 machine
		TAR=/usr/local/bin/tar
	elif [ -e /usr/sfw/bin/gtar ] ; then
		# This is for the solaris 10 box
		TAR=/usr/sfw/bin/gtar
	else
		TAR=tar
	fi

	$TAR -zxf *.tar.gz			|| exit 1

	# Why wasn't this used? failed unpacking??
	#gzip -dc *.tar.gz | tar -xf -		|| exit 1

else
	component_name_ver=${tarball//\.zip/}
	unzip -q *.zip				|| exit 1
fi

cd $component_name_ver

# Load environment for deps
. /tmp/build_deps/env.sh

# Call the function for this destroot
. /tmp/scratch/$package

# Apply patches (if the def file has USE_PATCHES in it)
if [ x$USE_PATCHES == "x1" ] ; then
	for i in `ls  ../*.patch | sort -n` ; do
		patch -p1 < $i			|| exit 1
	done
fi

DISTRO_UNDERSCORES=${distro//-/_}
${DISTRO_UNDERSCORES}_ZIP_BUILD || exit 1
# TODO:  For some reason the above exit isn't being called on failures

# Package up the build
mkdir -p /tmp/builder/built-packages
cd /tmp/install || exit 1
zip -yr /tmp/builder/built-packages/$component_name_ver-$rev.$arch.zip *
# Keep a copy of the "spec" file
cp /tmp/scratch/$package /tmp/builder/built-packages


