web_index=8

#RELEASE_DEPS=1
HEAD_DEPS=1

MKTARBALL_HEAD_DEPS=1

BUILD_HOSTS=(
	suse-101-i586
	suse-101-x86_64
	suse-101-ppc
	debian-4-arm
	debian-4-sparc
	sunos-10-sparc
	sunos-10-x86
)

USE_HOSTS=(${BUILD_HOSTS[@]})

ZIP_BUILD () {
	./configure || exit 1
	make || exit 1
	make DESTDIR=/tmp/install install || exit 1
}

suse_101_noarch_RPM_DEPS=(
	http://build.mono.lab.novell.com/~builder/ndesk-dbus.rpm
)

suse_101_i586_RPM_DEPS=(
	http://download.opensuse.org/repositories/home:/ajorgensen:/mozilla/SLE_10/i586/mozilla-xulrunner190-1.8.99.5-5.1.i586.rpm
	http://download.opensuse.org/repositories/home:/ajorgensen:/mozilla/SLE_10/i586/mozilla-xulrunner190-devel-1.8.99.5-5.1.i586.rpm
)

suse_101_x86_64_RPM_DEPS=(
	http://download.opensuse.org/repositories/home:/ajorgensen:/mozilla/SLE_10/x86_64/mozilla-xulrunner190-1.8.99.5-5.1.x86_64.rpm
	http://download.opensuse.org/repositories/home:/ajorgensen:/mozilla/SLE_10/x86_64/mozilla-xulrunner190-devel-1.8.99.5-5.1.x86_64.rpm
)

MONO_DEPS=(
	mono
	monodoc
	xsp
)

MONO_RECOMMEND_DEPS=(
	gtk-sharp2
	gtk-sharp28
	gtk-sharp210
	gnome-sharp2
	libgdiplus
)

get_destroot () {
	DEST_ROOT=$DISTRO
}

HEAD_PATH=(
        trunk/moon
)
RELEASE_PATH=(
        tags/moon/[[versiondot]]
)

update_version_file () {
        sed -i "s/\(AC_INIT(\[.*\], *\[\).*\(\])\)/\1$VERSION\2/" configure.ac
}

# This jail has ffmpeg in it
MKTARBALL_HOST="suse-101-i586"

POSTBUILD_STEP_NAME1="test"
POSTBUILD_STEP1 () {
	Xvfb -ac -screen 0 1280x1024x24 -nolisten tcp :3 2>/dev/null &
	eval $(dbus-launch --auto-syntax)
	DISPLAY=:3 make run-tests
	kill -TERM $DBUS_SESSION_BUS_PID
	kill %1

	target=$build_location/steps/test
	mv test/html_report $target
}

POSTBUILD_STEP_NAME2="ms-test"
POSTBUILD_STEP2 () {
	curl -s http://build.mono.lab.novell.com/~builder/drop1030.tar.bz2 | tar xj

	Xvfb -ac -screen 0 1280x1024x24 -nolisten tcp :3 2>/dev/null &
	eval $(dbus-launch --auto-syntax)
	DISPLAY=:3 make MS_DRTLIST=$(pwd)/port/drop1030/built/drtlist.xml run-ms-tests
	kill -TERM $DBUS_SESSION_BUS_PID
	kill %1

	target=$build_location/steps/ms-test
	mv test/html_report $target
}

POSTBUILD_STEP_NAME3="plugin-1.0-ffmpeg"
POSTBUILD_STEP3 () {
	curl -s http://build.mono.lab.novell.com/~builder/moon-ffmpeg.tar.bz2 | tar xj
	pushd moon-ffmpeg
	./configure --disable-static --enable-shared --disable-ffmpeg --disable-ffserver --disable-ffplay --disable-zlib --disable-network --disable-vhook --disable-debug --disable-muxers --disable-encoders --disable-demuxers --disable-bsfs --disable-protocols
	make
	popd

	make distclean
	export PKG_CONFIG_PATH=$(pwd)/moon-ffmpeg:$PKG_CONFIG_PATH
	./configure --without-mono --enable-user-plugin --with-ffmpeg
	make
	target=$build_location/steps/plugin-1.0-ffmpeg
	mkdir -p $target
	cp plugin/install/novell-moonlight*.xpi $target/
}

POSTBUILD_STEP_NAME4="plugin-2.0-ffmpeg"
POSTBUILD_STEP4 () {
	make distclean
	export PKG_CONFIG_PATH=$(pwd)/moon-ffmpeg:$PKG_CONFIG_PATH
	./configure --enable-user-plugin --with-ffmpeg
	make
	target=$build_location/steps/plugin-2.0-ffmpeg
	mkdir -p $target
	cp plugin/install/novell-moonlight*.xpi $target/
}

POSTBUILD_STEP_NAME5="plugin-1.0"
POSTBUILD_STEP5 () {
	make distclean
	./configure --without-mono --enable-user-plugin --without-ffmpeg
	make
	target=$build_location/steps/plugin-1.0
	mkdir -p $target
	cp plugin/install/novell-moonlight*.xpi $target/
}

POSTBUILD_STEP_NAME6="plugin-2.0"
POSTBUILD_STEP6 () {
	make distclean
	./configure --enable-user-plugin --without-ffmpeg
	make
	target=$build_location/steps/plugin-2.0
	mkdir -p $target
	cp plugin/install/novell-moonlight*.xpi $target/
}
