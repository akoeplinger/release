web_index=6

MKTARBALL_HEAD_DEPS=1

version_selection_reg="2\.12\.\d+"

BUILD_HOSTS=(
	macos-10-ppc
	macos-10-x86
	sle-11-ia64
	sle-11-i586
	sle-11-ppc64
	sle-11-x86_64
	win-4-i386
)

USE_HOSTS=(${BUILD_HOSTS[@]})

MONO_RECOMMEND_DEPS=(
	libgdiplus
)

MONO_DEPS=(
	mono
)

#MKTARBALL_HOST="suse-103-x86_64"
MKTARBALL_HOST="suse-110-x86_64"

get_destroot () {
	DEST_ROOT=$DISTRO
}

HEAD_PATH=(
	branches/gtk-sharp-2-12-branch
)
RELEASE_PATH=(
        tags/gtk-sharp/[[versiondot]]
)

update_version_file () {
	sed -i "s/^\(GTK_SHARP_VERSION\)=.*/\1=$VERSION/" bootstrap-2.12
}

make_dist () {
        # This is needed on suse systems with gnome in /opt
        . /etc/profile
        ./bootstrap-2.12
        make dist-bzip2
}

macos_10_x86_ZIP_DEPS=(
	http://download.mono-project.com/build-deps/macos/i386/atk-1.33.6-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/cairo-1.10.2-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/fontconfig-2.8.0-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/freetype-2.4.4-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/glib-2.28.8-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/gdk-pixbuf-2.22.1-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/gtk+-2.24.5-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/libglade-2.6.4-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/librsvg-2.26.3-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/libxml2-2.6.30-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/pango-1.28.4-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/pixman-0.22.2-2.10.6.macos10.xamarin.x86.zip
)

macos_10_x86_ZIP_RUNTIME_DEPS=(
	http://download.mono-project.com/build-deps/macos/gtkrc_mac-1.zip
	http://download.mono-project.com/build-deps/macos/i386/gtk-engines-2.20.2-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/ige-mac-integration-0.9.8-2.10.6.macos10.xamarin.x86.zip
	http://download.mono-project.com/build-deps/macos/i386/murrine-0.98.1-2.10.6.macos10.xamarin.x86.zip
)

macos_10_ppc_ZIP_DEPS=(
	http://download.mono-project.com/build-deps/macos/ppc/atk-1.30.0-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/cairo-1.8.10-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/fontconfig-2.8.0-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/freetype-2.4.2-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/glib-2.24.1-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/gtk+-2.20.1-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/libglade-2.6.4-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/librsvg-2.26.3-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/libxml2-2.6.30-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/pango-1.28.1-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/pixman-0.18.2-8.macos10.novell.ppc.zip
)

macos_10_ppc_ZIP_RUNTIME_DEPS=(
	http://download.mono-project.com/build-deps/macos/gtkrc_mac-1.zip
	http://download.mono-project.com/build-deps/macos/ppc/gtk-engines-2.20.1-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/ige-mac-integration-0.8.2-8.macos10.novell.ppc.zip
	http://download.mono-project.com/build-deps/macos/ppc/murrine-0.90.3-8.macos10.novell.ppc.zip
)


macos_10_ZIP_BUILD () {

        # This is so we can use the relocated mono (Will probably have to do this for all builds on mac)
        export  MONO_GAC_PREFIX=/tmp/build_deps
        export  MONO_PREFIX=/tmp/build_deps
        export  MONO_CFG_DIR=/tmp/build_deps/etc
        export  MONO_PATH=/tmp/build_deps/lib

        # add this so libxml is found
        export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/tmp/build_deps/lib/pkgconfig:/usr/X11R6/lib/pkgconfig

        CFLAGS="-isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 -m32" LDFLAGS="-isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 -m32" ./configure --prefix=/tmp/install || exit 1

        make || exit 1
        make install || exit 1

}

win_4_i386_ZIP_DEPS=(
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/cairo-dev_1.10.2-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/cairo_1.10.2-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/expat-dev_2.0.1-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/expat_2.0.1-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/fontconfig-dev_2.8.0-2_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/fontconfig_2.8.0-2_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/freetype-dev_2.4.2-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/freetype_2.4.2-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/libpng-dev_1.4.0-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/libpng_1.4.0-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/libxml2-dev_2.7.7-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/dependencies/libxml2_2.7.7-1_win32.zip

	http://ftp.gnome.org/pub/GNOME/binaries/win32/atk/1.32/atk-dev_1.32.0-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/atk/1.32/atk_1.32.0-1_win32.zip

	http://ftp.gnome.org/pub/GNOME/binaries/win32/glib/2.28/glib-dev_2.28.1-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/glib/2.28/glib_2.28.1-1_win32.zip

	http://ftp.gnome.org/pub/GNOME/binaries/win32/gdk-pixbuf/2.22/gdk-pixbuf-dev_2.22.1-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/gdk-pixbuf/2.22/gdk-pixbuf_2.22.1-1_win32.zip

	http://ftp.gnome.org/pub/GNOME/binaries/win32/gtk+/2.24/gtk+-dev_2.24.0-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/gtk+/2.24/gtk+_2.24.0-1_win32.zip

	http://ftp.gnome.org/pub/GNOME/binaries/win32/libglade/2.6/libglade-dev_2.6.4-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/libglade/2.6/libglade_2.6.4-1_win32.zip

	http://ftp.gnome.org/pub/GNOME/binaries/win32/pango/1.28/pango-dev_1.28.3-1_win32.zip
	http://ftp.gnome.org/pub/GNOME/binaries/win32/pango/1.28/pango_1.28.3-1_win32.zip
)

win_4_i386_ZIP_BUILD () {
        #CSC=`cygpath -d /cygdrive/c/WINDOWS/Microsoft.NET/Framework/v2.0.50727`
        CSC=`cygpath -d /cygdrive/c/WINDOWS/Microsoft.NET/Framework/v1.1.4322`
        CSC=`cygpath -a $CSC`

        # Add MS SDK to path for ilasm and ildasm
        #SDK=`cygpath -d "/cygdrive/c/Program Files/Microsoft Visual Studio 8/SDK/v2.0/Bin"`
        SDK=`cygpath -d "/cygdrive/c/Program Files/Microsoft.NET/SDK/v1.1/Bin"`
        SDK=`cygpath -a $SDK`
        export PATH=$SDK:$CSC:$PATH

        # Since we're using MS compiler, fake like mono's not installed
        mkdir -p /tmp/backup
        mv /tmp/build_deps/lib/pkgconfig/mono*.pc /tmp/backup

        ./configure --prefix=/tmp/install
	
	# some stray carriage returns make the build blow up. ideally, we would find the source of these instead of just patching them here
	dos2unix glib/glue/Makefile pango/glue/Makefile atk/glue/Makefile gdk/glue/Makefile gtk/glue/Makefile glade/glue/Makefile sample/valtest/Makefile sample/opaquetest/Makefile

        # let's just skip the gnomevfs sample instead of disabling gnome-vfs
        # Unnecessary in 2.8.1... doh, still another problem: Mono.GetOptions isn't on mssdk
        sed -i "s/gnomevfs valtest/valtest/" sample/Makefile

        # Don't have cyg in dll files
        # Not needed (in 2.8.2 at least)
        #sed -i "s/\/cyg\//\/\//" libtool
	
        # Clean up the MS gac of gtk-sharp
        rm -Rf /cygdrive/c/WINDOWS/ASSEMBLY/GAC*/*-sharp
        rm -Rf /cygdrive/c/WINDOWS/ASSEMBLY/GAC*/*gtk-dotnet

        make || exit 1
        make install || exit 1

        # Install the samples
        mkdir -p /tmp/install/samples/gtk-sharp-2.0
        cp -Rf sample/* /tmp/install/samples/gtk-sharp-2.0

        # Move them to a temp dir...
        rm -Rf /tmp/temp_install
        mkdir -p /tmp/temp_install
        mv /cygdrive/c/WINDOWS/ASSEMBLY/GAC*/*-sharp /tmp/temp_install
        mv /cygdrive/c/WINDOWS/ASSEMBLY/GAC*/*gtk-dotnet /tmp/temp_install

        # TODO: Should I be using mono's gacutil instead to install these files?  yes!

        # Do some path manipulation so that "." is removed from the path.  This allows execdir to work
        OLD_PATH=$PATH
        export PATH=/tmp/build_deps/bin:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:/cygdrive/c/WINDOWS/system32:/cygdrive/c/WINDOWS
        find /tmp/temp_install -name "*.dll" -execdir /tmp/build_deps/bin/gacutil /i {} /f /package gtk-sharp-2.0 /gacdir `cygpath -m /tmp/install/lib` \;
        export PATH=$OLD_PATH

        # Remove some uneeded files
        #  exit on the first failure, usually means windows find was used instead of cygwin's find
        find /tmp/install -name "*\.a" | xargs rm -f || exit 1
        find /tmp/install -name "*\.la" | xargs rm -f
        find /tmp/install -name "__*\.ini" | xargs rm -f

        ## Don't have to worry about removing the .config files because this is built with ms sdk.  Once we build with mono we'll have to remove them
        ## We need to make sure we keep the policy .config files (but not the normal .config files)
        #  The 2.8.2 build doesn't install .config files for non-policy assemblies... this should never be needed
        #find /tmp/install -name "*\.config" | xargs rm -f

        # Windows convention to have .dll files in the bin dir instead of lib
        mv /tmp/install/lib/*.dll /tmp/install/bin

}
