
BUILD_HOSTS=(
        debian-4-arm
        debian-4-sparc
	macos-10-ppc
	macos-10-x86
        nld-9-i586
        nld-9-x86_64
        rhel-4-i386
        sles-9-i586
        sles-9-ia64
        sles-9-ppc
        sles-9-s390
        sles-9-s390x
        sles-9-x86_64
        sunos-8-sparc
        sunos-10-x86
        sles-10-ia64
        suse-101-i586
        suse-101-ppc
        suse-101-x86_64
        suse-102-i586
        suse-102-ppc
        suse-102-x86_64
        suse-103-i586
        suse-103-ppc
        suse-103-x86_64
        win-4-i386
)

USE_HOSTS=(${BUILD_HOSTS[@]})

get_destroot () {
	DEST_ROOT=$DISTRO
}

HEAD_PATH=(
	trunk/gluezilla
)
RELEASE_PATH=(
	tags/mono-[[version]]/gluezilla
)

update_version_file () {
        sed -i "s/\(AM_INIT_AUTOMAKE.*,\\).*)/\\1$VERSION)/" configure.ac
}

ZIP_BUILD () {

        ./configure --prefix=/tmp/install || exit 1
        make || exit 1
        make install || exit 1

}

win_4_i386_ZIP_DEPS=(
	http://ftp-mozilla.netscape.com/pub/mozilla.org/xulrunner/releases/1.8.1.3/contrib/sdk/xulrunner-1.8.1.3.en-US.win32.sdk.zip
	http://ftp.mozilla.org/pub/mozilla.org/mozilla/source/wintools.zip
)

win_4_i386_ZIP_RUNTIME_DEPS=(
	http://releases.mozilla.org/pub/mozilla.org/xulrunner/releases/1.8.1.3/contrib/win32/xulrunner-1.8.1.3.en-US.win32.zip
)

win_4_i386_ZIP_BUILD () {

	# Install platform sdk, c++ express, and sp1 for c++ express (sp1 probably not needed after all)

	cd build
	for i in gecko-sdk/bin/xpidl.exe buildtools/windows/bin/x86/glib-1.2.dll buildtools/windows/bin/x86/libIDL-0.6.dll ; do 
		cp /tmp/build_deps/$i .
	done
	chmod 755 xpidl.exe *.dll
	chmod 755 make.cmd
	make.cmd c:\\cygwin\\tmp\\build_deps\\gecko-sdk
	cd ..

	cd src
	# Do this to get around the 'invalid pdb problem'
	#  Hrm... sp1 was supposed to fix the issue, but it didn't work (http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=99676)
	# don't build with sp1, because then we need to distribute the sp1 redistributable
	my_dir=`cygpath -w $PWD`
	# both vcvars and SetEnv need to be called because one has cl.exe, and the latter has the win32 api headers
	cat <<EOF > build.bat
call "c:\Program Files\Microsoft Visual Studio 8\VC\vcvarsall.bat"
call "c:\Program Files\Microsoft Platform SDK for Windows Server 2003 R2\SetEnv.Cmd"
nmake /f windows.mak CFG=Debug all
EOF
	rsh localhost "cd $my_dir && build.bat" || exit 1

	mkdir -p /tmp/install/bin
	cp gluezilla.dll /tmp/install/bin

}

