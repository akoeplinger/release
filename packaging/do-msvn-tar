#!/bin/sh
#
# The driver script to make a tarball
#

package=$1
svn_path=$2
snapshot_rev=$3

cd /tmp
rm -rf package-builder
mkdir package-builder
cd package-builder

# use the key in /usr/share/ximian-build-system/conf/ssh
export SVN_SSH=/usr/bin/bb_ssh

if [ ! x$snapshot_rev == x ]; then
	rev_arg="-r $snapshot_rev"
fi

SVNEXPORT="svn export -q $ref_arg"
MONO_ROOT="svn+ssh://distro@mono-cvs.ximian.com/source"
MD_ROOT="svn+ssh://distro@mono-cvs.ximian.com/svn/monodevelop"

#
# These scripts change the version in configure.in to have the svn
# rev number after it.
#
normal_change_ver ()
{
	sed -i "s/\(AM_INIT_AUTOMAKE.*\))/\1.$snapshot_rev)/" configure.in
}

md_change_ver ()
{
	sed -i "s/\(AC_INIT.*\)\(0\.[0-9]*\)/\1\2.$snapshot_rev/" configure.in
}

DO_CHANGE_AUTOMAKE='normal_change_ver'

# Special case package configurations
case $package in
    mono-1.1 )
	# we need to check out both mono and mcs in this case. The svn path we
	# get is just below where the modules live.
	
	$SVNEXPORT $MONO_ROOT/$svn_path/mono
	$SVNEXPORT $MONO_ROOT/$svn_path/mcs
	
	BUILD_DIR=mono
	
	# needed so that we don't need to build the mono in the tarball
	DIST_FLAGS="MCS=mcs RESGEN=resgen"
	
	;;

    monodevelop )
	# md has its own svn repo
	$SVNEXPORT $MD_ROOT/$svn_path
	
	DO_CHANGE_AUTOMAKE='md_change_ver'
	
	;;
    * )
	$SVNEXPORT $MONO_ROOT/$svn_path
	;;
esac

: ${BUILD_DIR=$(basename $svn_path)}

cd $BUILD_DIR

if [ ! x$snapshot_rev == x ]; then
	$DO_CHANGE_AUTOMAKE
fi

./autogen.sh || exit 1
make dist $DIST_FLAGS || exit 1
rm -rf /tmp/built-tarball
mkdir -p /tmp/built-tarball
mv *.tar.gz /tmp/built-tarball

cd /tmp

rm -rf package-builder	