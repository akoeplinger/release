#! /bin/bash -x
#
# USAGE: update-status VERSION NAME
#
export VERSION=$1
export NAME=$2
export SECTIONS="mscorlib cscompmgd System System.Xml System.Configuration.Install System.Data System.Data.OracleClient System.Design System.Drawing System.Drawing.Design System.DirectoryServices System.Management System.Messaging System.ServiceProcess System.Web System.Web.Services Microsoft.VisualBasic System.EnterpriseServices System.Runtime.Remoting System.Windows.Forms System.Runtime.Serialization.Formatters.Soap System.Security"
export DEST="mono-web@mono.ximian.com:go-mono/class-status/$NAME/"

cur=`pwd`
cd ./mono/web/web

#
# Download the masterinfo files and unpack them
#
#wget -nv -O masterinfos-$VERSION.tar.gz http://mono.ximian.com/masterinfos/masterinfos-$VERSION.tar.gz
wget -m http://mono.ximian.com/masterinfos/masterinfos-$VERSION.tar.gz
test $? -eq 0 || exit 1
cp mono.ximian.com/masterinfos/masterinfos-$VERSION.tar.gz .
tar zxpf masterinfos-$VERSION.tar.gz

PROFILE=nonesuch
case $VERSION in
1.1) PROFILE=default ;;
2.0) PROFILE=net_2_0 ; export SECTIONS="$SECTIONS Microsoft.Build.Engine Microsoft.Build.Framework Microsoft.Build.Tasks Microsoft.Build.Utilities System.Configuration System.Transactions System.ServiceProcess" ;;
esac

#
# Build the necessary tools
#
mcs -nowarn:0618 transform.cs XhtmlWriter.cs
(cd ../../../mcs/tools/corcompare; make PROFILE=default)
(cd ../../../mcs/tools/corcompare; make PROFILE=$PROFILE)

#
# Generate the data
#
for i in $SECTIONS; do
    mono ../../../mcs/class/lib/$PROFILE/mono-api-info.exe $i > infos/$i.xml || (rm -f infos/$i.xml && exit 1)
    mono ../../../mcs/tools/corcompare/mono-api-diff.exe masterinfos/$i.xml infos/$i.xml > src/$i.xml || (rm -f src/$i.xml && exit 1)
    mono ./transform.exe src/$i.xml ../../../mcs/tools/corcompare/mono-api.xsl > src/$i.html.in || (rm -f src/$i.html.in && exit 1)
    perl htmlify src/$i.html.in > src/class-status-$i.src
done

#
# Apply the template to the src files to form the final HTML file
#
python $cur/apply-template $cur/template.html $cur/index-$VERSION.src index.html
for file in src/*.src; do
    f=src/`basename $file .src`
    python $cur/apply-template $cur/template.html $f.src $f.html
done

#
# Upload the templates and files
#
scp -o "StrictHostKeyChecking no" -C -q src/*.html index.html $DEST
scp -o "StrictHostKeyChecking no" -q deploy/cm/* $DEST/cm/
