<?xml version="1.0" ?>

<!DOCTYPE module SYSTEM "helix-build.dtd">

<module>
  <targetset>
    <filter>
      <i>.*</i>
    </filter>
    <name>IronPython</name>

    <psdata id="copyright">MS Shared Source License</psdata>
    <psdata id="url">http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython</psdata>

    <source>
      <!-- doesn't really work, just fools buildbuddy about where the tar is -->
      <i>SVN svn+ssh://mono-cvs.ximain.com/source/trunk</i>
    </source>

    <build id="default">
      <prepare>rm -f *.exe *.dll;sed -i s/csc/gmcs/g Src/makefile;sed -i "s/mkdir/mkdir -p/g" Src/makefile</prepare>
      <compile>cd Src; make</compile>
      <install>
<![CDATA[

# Create dirs
mkdir -p ${DESTDIR}[[usrprefix]]/bin
mkdir -p ${DESTDIR}[[usrprefix]]/lib/IronPython
mkdir -p ${DESTDIR}[[usrprefix]]/lib/IronPython/Lib


#Install binaries
cp *.exe *.dll ${DESTDIR}[[usrprefix]]/lib/IronPython
cp Lib/site.py ${DESTDIR}[[usrprefix]]/lib/IronPython/Lib

# Pack up tutorial
zip -r tutorial.zip Tutorial

#export IRONPYTHONPATH=""
## Build up python path
#for pyver in 2.4 2.3 2.2 ; do
#	export IRONPYTHONPATH=$IRONPYTHONPATH:/usr/lib/python$pyver
#	export IRONPYTHONPATH=$IRONPYTHONPATH:/usr/lib/python$pyver/site-packages
#	export IRONPYTHONPATH=$IRONPYTHONPATH:/usr/lib64/python$pyver
#	export IRONPYTHONPATH=$IRONPYTHONPATH:/usr/lib64/python$pyver/site-packages
#done
#export IRONPYTHONPATH=$IRONPYTHONPATH

# Generate wrapper scripts
for f in `find bin . -name "*\.exe"` ; do
	script_name=${DESTDIR}[[usrprefix]]/bin/`basename $f .exe`
	cat <<EOF > $script_name
#!/bin/sh
exec `which mono` [[usrprefix]]/lib/IronPython/`basename $f` "\$@"
EOF

	chmod 755 $script_name

done

## Generate site.py (add path for each distro)
## TODO: How to do this?  Could this be more dynamic in /usr/bin/ipy?
##  or maybe it shouldn't be done at all?
#cat <<EOF >> ${DESTDIR}[[usrprefix]]/lib/IronPython/Lib/site.py
#
#import sys
#sys.path.append("[[usrprefix]]/lib/python2.4")
#sys.path.append("[[usrprefix]]/lib64/python2.4")
#sys.path.append("[[usrprefix]]/lib/python2.3")
#sys.path.append("[[usrprefix]]/lib64/python2.3")
#sys.path.append("[[usrprefix]]/lib/python2.2")
#sys.path.append("[[usrprefix]]/lib64/python2.2")
#
#EOF
# Doesn't work... site.py doesn't seem to get loaded... ?

]]>
      </install>

      <psdata id="buildarch">noarch</psdata>

      <package id="default">
        <name>IronPython</name>

        <psdata id="group">Development/Tools</psdata>

        <files>
          <i>[[usrprefix]]/bin/*</i>
          <i>[[usrprefix]]/lib/IronPython</i>
        </files>

        <docs>
          <i>License.html</i>
          <i>FAQ.html</i>
          <i>Readme.html</i>
          <i>tutorial.zip</i>
        </docs>

<script id="find_provides">
           <i>
<![CDATA[
#!/bin/sh

filelist=`sed "s/['\"]/\\\&/g"`
 
{
    echo $filelist | tr [:blank:] \\n | /usr/lib/rpm/find-provides
    echo $filelist | tr [:blank:] \\n | /usr/bin/mono-find-provides
} | sort | uniq

]]>
           </i>
</script> 

<script id="find_requires">
           <i>
<![CDATA[
#!/bin/sh

filelist=`sed "s/['\"]/\\\&/g"`
 
{
    echo $filelist | tr [:blank:] \\n | /usr/lib/rpm/find-requires
    echo $filelist | tr [:blank:] \\n | /usr/bin/mono-find-requires
} | sort | uniq
]]>
           </i>           
</script>
        
        <description>
          <h>Implementation of the Python programming language running on .NET</h>
          <p>IronPython is the code name of the new implementation of the Python programming language running on .NET. It supports an interactive console with fully dynamic compilation. It is well integrated with the rest of the .NET Framework and makes all .NET libraries easily available to Python programmers, while maintaining full compatibility with the Python language.
	  </p>
        </description>
      </package>
    </build>
  </targetset>
</module>

<!--
    Local Variables:
    mode: xml
    End:
  -->
