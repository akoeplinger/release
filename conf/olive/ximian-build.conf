<?xml version="1.0" ?>

<!DOCTYPE module SYSTEM "helix-build.dtd">

<module>

  <targetset>
    <filter>
      <i>.*</i>
    </filter>
    <name>olive</name>

    <psdata id="copyright">LGPL</psdata>
    <psdata id="url">http://www.go-mono.com</psdata>
    <source>
      <!-- doesn't really work, just fools buildbuddy about where the tar is -->
      <i>SVN svn+ssh://mono-cvs.ximain.com/source/trunk</i>
    </source>

    <build id="default">
      <prepare>./configure --prefix=[[usrprefix]]</prepare>
      <compile>${MAKE}</compile>
      <install>${MAKE} install DESTDIR=${DESTDIR}</install>

      <psdata id="buildarch">noarch</psdata>

      <builddep id="buildrequires">
	<i>mono-devel</i>
      </builddep>

      <package id="default">
        <name>olive</name>

        <psdata id="group">Development/Tools</psdata>

        <files>

	  <i>[[usrprefix]]/bin/svcutil</i>
	  <i>[[usrprefix]]/lib/mono/3.0/svcutil.exe*</i>         

	  <i>[[usrprefix]]/bin/client-proxy-gen</i>
	  <i>[[usrprefix]]/lib/mono/3.0/client-proxy-gen.exe*</i>         

	  <i>[[usrprefix]]/bin/sts</i>
	  <i>[[usrprefix]]/lib/mono/3.0/sts.exe*</i>         

	  <i>[[usrprefix]]/bin/xamlc</i>
	  <i>[[usrprefix]]/lib/mono/3.0/xamlc.exe*</i>         

	  <i>[[usrprefix]]/lib/mono/gac/PresentationFramework</i>
	  <i>[[usrprefix]]/lib/mono/3.0/PresentationFramework.dll*</i>

	  <i>[[usrprefix]]/lib/mono/gac/WindowsBase</i>
	  <i>[[usrprefix]]/lib/mono/3.0/WindowsBase.dll*</i>

	  <i>[[usrprefix]]/lib/mono/gac/System.IdentityModel</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.IdentityModel.dll*</i>

	  <i>[[usrprefix]]/lib/mono/gac/System.IdentityModel.Selectors</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.IdentityModel.Selectors.dll*</i>

	  <i>[[usrprefix]]/lib/mono/gac/System.Workflow.Runtime</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.Workflow.Runtime.dll*</i>

	  <i>[[usrprefix]]/lib/mono/gac/System.Runtime.Serialization</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.Runtime.Serialization.dll*</i>

	  <i>[[usrprefix]]/lib/mono/gac/System.ServiceModel</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.ServiceModel.dll*</i>         

	  <i>[[usrprefix]]/lib/mono/gac/System.Workflow.Activities</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.Workflow.Activities.dll*</i>         

	  <i>[[usrprefix]]/lib/mono/gac/System.Workflow.ComponentModel</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.Workflow.ComponentModel.dll*</i>         

	  <i>[[usrprefix]]/lib/mono/gac/System.Xml.Linq</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.Xml.Linq.dll*</i>         

	  <i>[[usrprefix]]/lib/mono/gac/System.ServiceModel.Web</i>
	  <i>[[usrprefix]]/lib/mono/3.0/System.ServiceModel.Web*</i>         

	  <i>[[usrprefix]]/lib/pkgconfig/olive.pc</i>         
        </files>

        <docs>
          <i>README</i>
        </docs>

<script id="find_provides">
           <i>
<![CDATA[
#!/bin/sh

filelist=`sed "s/['\"]/\\\&/g"`
 
{
    echo $filelist | tr [:blank:] \\n | /usr/lib/rpm/find-provides
    echo $filelist | tr [:blank:] \\n | /usr/bin/mono-find-provides
} | sort | uniq

]]>
           </i>
</script> 

<script id="find_requires">
           <i>
<![CDATA[
#!/bin/sh

filelist=`sed "s/['\"]/\\\&/g"`
 
{
    echo $filelist | tr [:blank:] \\n | /usr/lib/rpm/find-requires
    echo $filelist | tr [:blank:] \\n | /usr/bin/mono-find-requires
} | sort | uniq
]]>
           </i>           
</script>

<script id="postinst">
	<i>
<![CDATA[
#!/bin/sh
/sbin/ldconfig
]]>
	</i>
</script>
<script id="postrm">
	<i>
<![CDATA[
#!/bin/sh
/sbin/ldconfig
]]>
	</i>
</script>

        <description>
          <h>Mono Olive</h>
          <p>Some Linq and other various .NET 3.0 bits.
	  </p>
        </description>
      </package>

    </build>
  </targetset>

</module>

<!--
    Local Variables:
    mode: xml
    End:
  -->
