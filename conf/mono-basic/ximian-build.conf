<?xml version="1.0" ?>

<!DOCTYPE module SYSTEM "helix-build.dtd">

<module>
  <targetset>
    <filter>
      <i>.*</i>
    </filter>
    <name>mono-basic</name>

    <psdata id="copyright">GPL</psdata>
    <psdata id="url">http://www.mono-project.com</psdata>

    <source>
      <!-- doesn't really work, just fools buildbuddy about where the tar is -->
      <i>SVN svn+ssh://mono-cvs.ximain.com/source/trunk</i>
    </source>
        
    <build id="default">
      <prepare>./configure --prefix=[[usrprefix]]</prepare>

      <!-- profile probably provides some locale setting -->
      <compile>. /etc/profile; make</compile>
      <install><![CDATA[

	make install DESTDIR=${DESTDIR}

	# Check for binaries built on windows
	f="mono-basic-[[version]]-0.win4.novell.x86.zip"
	p="win-4-i386/mono-basic/[[version]]/$f"
	wget http://monobuild1.boston.ximian.com/~wberrier/zip_packages/$p || true
	wget http://monobuild1.boston.ximian.com/~wberrier/snapshot_zip_packages/$p || true

	# If we have windows built binaries, inject them into the package (to provide the 1.0 runtime)
	if [ -e "$f" ] ; then 
		unzip mono-basic-[[version]]-0.win4.novell.x86.zip
		# Remove vbnc built runtime
		rm -Rf ${DESTDIR}/[[usrprefix]]/lib/mono/gac/Microsoft.VisualBasic
		rm -Rf ${DESTDIR}/[[usrprefix]]/lib/mono/2.0/Microsoft.VisualBasic.dll

		# Fix permissions on files so they are readable
		chmod 755 lib/mono/1.0/Microsoft.VisualBasic.dll lib/mono/2.0/Microsoft.VisualBasic.dll

		## Install into new gac

		gacutil -package 1.0 -root ${DESTDIR}/usr/lib -i lib/mono/1.0/Microsoft.VisualBasic.dll
		gacutil -package 2.0 -root ${DESTDIR}/usr/lib -i lib/mono/2.0/Microsoft.VisualBasic.dll
	else
		# If we're building from HEAD, print warning (HEAD doesn't have a version with periods)
		if test `echo "[[version]]" | sed -e 's/\.//g'` == "[[version]]" ; then
			echo ""
			echo "*** vbnc DEBUG BUILD!  Don't ship this RPM! ***"
			echo ""
		# Otherwise RELEASE, fail build, because we don't want to ship an rpm without the 1.0 runtime
		else
			false
		fi
	fi

]]>
      </install>

      <psdata id="buildarch">noarch</psdata>

      <builddep id="buildrequires">
        <i>mono-devel</i>
      </builddep>
      
      <package id="default">
        <name>mono-basic</name>

        <psdata id="group">Development</psdata>

        <files>
          <i>[[usrprefix]]/bin/vbnc</i>

          <i>[[usrprefix]]/lib/mono/2.0/extract-source.exe*</i>
          <i>[[usrprefix]]/lib/mono/2.0/vbnc*</i>

          <i>[[usrprefix]]/lib/mono/gac/Microsoft.VisualBasic</i>
          <!-- when building on linux we won't have the 1.0, glob what we can -->
          <i>[[usrprefix]]/lib/mono/*.0/Microsoft.VisualBasic.dll</i>

        </files>

        <docs />

<script id="find_provides">
           <i>
<![CDATA[
#!/bin/sh

filelist=`sed "s/['\"]/\\\&/g"`
 
{
    echo $filelist | tr [:blank:] \\n | /usr/lib/rpm/find-provides
    echo $filelist | tr [:blank:] \\n | /usr/bin/mono-find-provides
} | sort | uniq

]]>
           </i>
</script> 

<script id="find_requires">
           <i>
<![CDATA[
#!/bin/sh

filelist=`sed "s/['\"]/\\\&/g"`
 
{
    echo $filelist | tr [:blank:] \\n | /usr/lib/rpm/find-requires
    echo $filelist | tr [:blank:] \\n | /usr/bin/mono-find-requires
} | sort | uniq
]]>
           </i>           
</script>

        <description>
          <h>Visual Basic .NET support for Mono</h>
          <p>This package contains the Visual Basic .NET compiler and language
           runtime. This allows you to compile and run VB.NET application and
           assemblies.
          </p>
        </description>
      </package>
    </build>
  </targetset>
</module>


<!--
    Local Variables:
    mode: xml
    End:
  -->
