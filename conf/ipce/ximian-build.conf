<?xml version="1.0" ?>

<!DOCTYPE module SYSTEM "helix-build.dtd">

<module>
  <targetset>
    <filter>
      <i>.*</i>
    </filter>
    <name>IPCE</name>

    <psdata id="copyright">MS Shared Source License</psdata>
    <psdata id="url">http://fepy.sourceforge.net/</psdata>

    <source>
      <!-- doesn't really work, just fools buildbuddy about where the tar is -->
      <i>SVN svn+ssh://mono-cvs.ximain.com/source/trunk</i>
    </source>

    <build id="default">
      <!-- package up binary, hopefully we'll never need to build fepy from scratch, as it could be a mess since they don't seem to have source for their releases -->
      <prepare>true</prepare>
      <compile>true</compile>
      <install>
<![CDATA[

# Create dirs
mkdir -p ${DESTDIR}[[usrprefix]]/bin
mkdir -p ${DESTDIR}[[usrprefix]]/lib/IPCE
mkdir -p ${DESTDIR}[[usrprefix]]/lib/IPCE/Lib


#Install binaries
cp *.exe *.dll ${DESTDIR}[[usrprefix]]/lib/IPCE
cp -R Lib/* ${DESTDIR}[[usrprefix]]/lib/IPCE/Lib

#export IRONPYTHONPATH=""
## Build up python path
#for pyver in 2.4 2.3 2.2 ; do
#	export IRONPYTHONPATH=$IRONPYTHONPATH:/usr/lib/python$pyver
#	export IRONPYTHONPATH=$IRONPYTHONPATH:/usr/lib/python$pyver/site-packages
#	export IRONPYTHONPATH=$IRONPYTHONPATH:/usr/lib64/python$pyver
#	export IRONPYTHONPATH=$IRONPYTHONPATH:/usr/lib64/python$pyver/site-packages
#done
#export IRONPYTHONPATH=$IRONPYTHONPATH

# Generate wrapper scripts
for f in `find . -name "*\.exe"` ; do
	script_name=${DESTDIR}[[usrprefix]]/bin/`basename $f .exe`
	cat <<EOF > $script_name
#!/bin/sh
exec `which mono` [[usrprefix]]/lib/IPCE/`basename $f` "\$@"
EOF

	chmod 755 $script_name

done

# Substitute location of python interpreter to make sure rpm doesn't depend on /usr/local/bin/python
for i in lib/IPCE/Lib/cgi.py lib/IPCE/Lib/Crypto/Util/RFC1751.py ; do
	sed -i "s/\/usr\/local\/bin\/python/\/usr\/bin\/python/" ${DESTDIR}[[usrprefix]]/$i
done

]]>
      </install>

      <psdata id="buildarch">noarch</psdata>

      <package id="default">
        <name>IPCE</name>

        <psdata id="group">Development/Tools</psdata>

        <dep id="obsoletes">
          <i>IronPython</i>
        </dep>
        <dep id="provides">
          <i>IronPython</i>
        </dep>

        <files>
          <i>[[usrprefix]]/bin/*</i>
          <i>[[usrprefix]]/lib/IPCE</i>
        </files>

        <docs>
          <i>FAQ.html</i>
          <i>License.html</i>
          <i>Readme.html</i>
        </docs>

<script id="find_provides">
           <i>
<![CDATA[
#!/bin/sh

filelist=`sed "s/['\"]/\\\&/g"`
 
{
    echo $filelist | tr [:blank:] \\n | /usr/lib/rpm/find-provides
    echo $filelist | tr [:blank:] \\n | /usr/bin/mono-find-provides
} | sort | uniq

]]>
           </i>
</script> 

<script id="find_requires">
           <i>
<![CDATA[
#!/bin/sh

filelist=`sed "s/['\"]/\\\&/g"`
 
{
    echo $filelist | tr [:blank:] \\n | /usr/lib/rpm/find-requires
    echo $filelist | tr [:blank:] \\n | /usr/bin/mono-find-requires
} | sort | uniq
]]>
           </i>
</script>
 
        <description>
          <h>Implementation of the Python programming language running on .NET</h>
          <p>IronPython is the code name of the new implementation of the Python programming language running on .NET. It supports an interactive console with fully dynamic compilation. It is well integrated with the rest of the .NET Framework and makes all .NET libraries easily available to Python programmers, while maintaining full compatibility with the Python language.

	IronPython Community Edition is a distribution of IronPython with FePy libraries and some 3rd party libraries.
	  </p>
        </description>
      </package>
    </build>
  </targetset>
</module>

<!--
    Local Variables:
    mode: xml
    End:
  -->
