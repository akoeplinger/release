How to build RPM packages for a release
=======================================

Part A: Submit the tarballs and update the conf file

1) Log into hardhat as builder.

2) Download all the release tarballs for that release, and for each
   tarball, run "bb_submit $tarball" to add to the source
   repository. The submission process will return the full name of the
   tarball. For example, submitting "foo.tar.gz" for the first time
   will lead to "foo.tar.gz-1". If you submit another time, it will be
   "foo.tar.gz-2". 

3) Update the <version> element in each of the ximian-build.conf files
   in conf/mono-conf/$module to reflect the full name of the latest
   tarball.


Part B: Connect to the jails

1) When you log in to builder@hardhat, it'll print out a listing of the
   available jails.

2) For each of the distribution, connect to the appropriate jail (the
   command is listed)


Part C: Build packages

1) Run "sh clear-packages" to clean up the output dir.

2) For each module, "cd conf/mono-conf/$module" and run "bb_redo". Make
   sure that it's building from the newly updated tarball, and not the
   old one.

3) Copy the resulting RPMs (in /tmp/$user/built-packages) to a
   directory on NFS for deployment. In general, I put them in
   "/nfs/$USER/deploy/$RELEASE/$DISTRIBUTION/" in my NFS
   dir. $DISTRIBUTION should be the same as the name used by RC, this
   makes uploading the files much easier.

   Remember: DO NOT COPY SOURCE RPMS AND DEBUGINFO RPMS.

4) If the package doesn't build, write a patch to fix the problem.


Part D: How to make a patch

1) For each module, there will be a "src" directory with the pristine
   source code and a "BUILD" directory for running the build. Using
   the "BUILD" directory, figure out what changes need to be made. If
   these directories are not available, run "bb_unpack".

2) Apply the changes to the "src" directory.

3) With the changes made, go back to the root module directory (parent
   of src and BUILD), and call "bb_regenerate <name of patch>".

4) A "foo.patch.new" will be created, read it and make sure it
   contains the valid changes. Rename it to "foo.patch". Submit the
   patch to the repository ("bb_submit foo.patch").

5) In the ximian-build.conf file, parallel to the <source> element,
   put in a new <patch> element like this:

   <patch>
     <i>foo.patch-1</i>
   </patch>

6) Run "bb_redo" again, make sure the patch is applied.   
