#!/usr/bin/env python

# Toying with the idea of doing this in python if I couldn't get the C version to work... 

# This program obviously doesn't work

import sys
import string
import re

# Delimiters ordered by sort preference (earlier in list has lower preference)
delimiters = '-.'

delimit_match = re.compile("[%s]" % delimiters)

def compare_with_operator(string1, string2, operator):
	pass

# Takes an array of strings and sorts "doing the right thing" 
#  (specifically for filenames with versions in them)
def version_compare(string1, string2):

	# First, split these strings on delimeters, namely, '.' and '-'

	# Then, going down each of the paired lists, do string comparisons, 
	#  but if they are equal, give preference to certain preceding delimiters (in our case, '.')
	list1 = delimit_match.split(string1)
	list2 = delimit_match.split(string2)

	list1_len = len(list1)
	list2_len = len(list2)

	result = 0
	# Have i count up to the smaller of the two lists
	for i in range(min(len(list1), len(list2))):
		print "First %s" % list1[i]
		print "Second %s" % list2[i]
		# Only continue through the list if they are equivalent
		if list1[i] == list2[i]: 
			result = 0
		elif list1[i] > list2[i]: 
			result = 1
			break
		elif list1[i] < list2[i]: 
			result = -1
			break

	# Or, 
	# First, split on first delimiter, for each of those, split second delimited, and compare

	return result


def commandline():
	version_strings = sys.argv[1:]

	# Sort using our method
	version_strings.sort(version_compare)

	for str in version_strings:
		print str,


# If called from the command line, run main, otherwise, functions are callable through imports
if __name__ == "__main__":
	commandline()


